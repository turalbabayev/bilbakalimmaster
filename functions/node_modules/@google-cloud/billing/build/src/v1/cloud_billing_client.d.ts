import type * as gax from 'google-gax';
import type { Callback, CallOptions, Descriptors, ClientOptions, PaginationCallback } from 'google-gax';
import { Transform } from 'stream';
import * as protos from '../../protos/protos';
/**
 *  Retrieves the Google Cloud Console billing accounts and associates them with
 *  projects.
 * @class
 * @memberof v1
 */
export declare class CloudBillingClient {
    private _terminated;
    private _opts;
    private _providedCustomServicePath;
    private _gaxModule;
    private _gaxGrpc;
    private _protos;
    private _defaults;
    private _universeDomain;
    private _servicePath;
    private _log;
    auth: gax.GoogleAuth;
    descriptors: Descriptors;
    warn: (code: string, message: string, warnType?: string) => void;
    innerApiCalls: {
        [name: string]: Function;
    };
    pathTemplates: {
        [name: string]: gax.PathTemplate;
    };
    cloudBillingStub?: Promise<{
        [name: string]: Function;
    }>;
    /**
     * Construct an instance of CloudBillingClient.
     *
     * @param {object} [options] - The configuration object.
     * The options accepted by the constructor are described in detail
     * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
     * The common options are:
     * @param {object} [options.credentials] - Credentials object.
     * @param {string} [options.credentials.client_email]
     * @param {string} [options.credentials.private_key]
     * @param {string} [options.email] - Account email address. Required when
     *     using a .pem or .p12 keyFilename.
     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
     *     .p12 key downloaded from the Google Developers Console. If you provide
     *     a path to a JSON file, the projectId option below is not necessary.
     *     NOTE: .pem and .p12 require you to specify options.email as well.
     * @param {number} [options.port] - The port on which to connect to
     *     the remote host.
     * @param {string} [options.projectId] - The project ID from the Google
     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
     *     the environment variable GCLOUD_PROJECT for your project ID. If your
     *     app is running in an environment which supports
     *     {@link https://cloud.google.com/docs/authentication/application-default-credentials Application Default Credentials},
     *     your project ID will be detected automatically.
     * @param {string} [options.apiEndpoint] - The domain name of the
     *     API remote host.
     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
     *     Follows the structure of {@link gapicConfig}.
     * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.
     *     For more information, please check the
     *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
     * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
     *     need to avoid loading the default gRPC version and want to use the fallback
     *     HTTP implementation. Load only fallback version and pass it to the constructor:
     *     ```
     *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
     *     const client = new CloudBillingClient({fallback: true}, gax);
     *     ```
     */
    constructor(opts?: ClientOptions, gaxInstance?: typeof gax | typeof gax.fallback);
    /**
     * Initialize the client.
     * Performs asynchronous operations (such as authentication) and prepares the client.
     * This function will be called automatically when any class method is called for the
     * first time, but if you need to initialize it before calling an actual method,
     * feel free to call initialize() directly.
     *
     * You can await on this method if you want to make sure the client is initialized.
     *
     * @returns {Promise} A promise that resolves to an authenticated service stub.
     */
    initialize(): Promise<{
        [name: string]: Function;
    }>;
    /**
     * The DNS address for this API service.
     * @deprecated Use the apiEndpoint method of the client instance.
     * @returns {string} The DNS address for this service.
     */
    static get servicePath(): string;
    /**
     * The DNS address for this API service - same as servicePath.
     * @deprecated Use the apiEndpoint method of the client instance.
     * @returns {string} The DNS address for this service.
     */
    static get apiEndpoint(): string;
    /**
     * The DNS address for this API service.
     * @returns {string} The DNS address for this service.
     */
    get apiEndpoint(): string;
    get universeDomain(): string;
    /**
     * The port for this API service.
     * @returns {number} The default port for this service.
     */
    static get port(): number;
    /**
     * The scopes needed to make gRPC calls for every method defined
     * in this service.
     * @returns {string[]} List of default scopes.
     */
    static get scopes(): string[];
    getProjectId(): Promise<string>;
    getProjectId(callback: Callback<string, undefined, undefined>): void;
    /**
     * Gets information about a billing account. The current authenticated user
     * must be a [viewer of the billing
     * account](https://cloud.google.com/billing/docs/how-to/billing-access).
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The resource name of the billing account to retrieve. For
     *   example, `billingAccounts/012345-567890-ABCDEF`.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.billing.v1.BillingAccount|BillingAccount}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/cloud_billing.get_billing_account.js</caption>
     * region_tag:cloudbilling_v1_generated_CloudBilling_GetBillingAccount_async
     */
    getBillingAccount(request?: protos.google.cloud.billing.v1.IGetBillingAccountRequest, options?: CallOptions): Promise<[
        protos.google.cloud.billing.v1.IBillingAccount,
        protos.google.cloud.billing.v1.IGetBillingAccountRequest | undefined,
        {} | undefined
    ]>;
    getBillingAccount(request: protos.google.cloud.billing.v1.IGetBillingAccountRequest, options: CallOptions, callback: Callback<protos.google.cloud.billing.v1.IBillingAccount, protos.google.cloud.billing.v1.IGetBillingAccountRequest | null | undefined, {} | null | undefined>): void;
    getBillingAccount(request: protos.google.cloud.billing.v1.IGetBillingAccountRequest, callback: Callback<protos.google.cloud.billing.v1.IBillingAccount, protos.google.cloud.billing.v1.IGetBillingAccountRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Updates a billing account's fields.
     * Currently the only field that can be edited is `display_name`.
     * The current authenticated user must have the `billing.accounts.update`
     * IAM permission, which is typically given to the
     * [administrator](https://cloud.google.com/billing/docs/how-to/billing-access)
     * of the billing account.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The name of the billing account resource to be updated.
     * @param {google.cloud.billing.v1.BillingAccount} request.account
     *   Required. The billing account resource to replace the resource on the
     *   server.
     * @param {google.protobuf.FieldMask} request.updateMask
     *   The update mask applied to the resource.
     *   Only "display_name" is currently supported.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.billing.v1.BillingAccount|BillingAccount}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/cloud_billing.update_billing_account.js</caption>
     * region_tag:cloudbilling_v1_generated_CloudBilling_UpdateBillingAccount_async
     */
    updateBillingAccount(request?: protos.google.cloud.billing.v1.IUpdateBillingAccountRequest, options?: CallOptions): Promise<[
        protos.google.cloud.billing.v1.IBillingAccount,
        protos.google.cloud.billing.v1.IUpdateBillingAccountRequest | undefined,
        {} | undefined
    ]>;
    updateBillingAccount(request: protos.google.cloud.billing.v1.IUpdateBillingAccountRequest, options: CallOptions, callback: Callback<protos.google.cloud.billing.v1.IBillingAccount, protos.google.cloud.billing.v1.IUpdateBillingAccountRequest | null | undefined, {} | null | undefined>): void;
    updateBillingAccount(request: protos.google.cloud.billing.v1.IUpdateBillingAccountRequest, callback: Callback<protos.google.cloud.billing.v1.IBillingAccount, protos.google.cloud.billing.v1.IUpdateBillingAccountRequest | null | undefined, {} | null | undefined>): void;
    /**
     * This method creates [billing
     * subaccounts](https://cloud.google.com/billing/docs/concepts#subaccounts).
     *
     * Google Cloud resellers should use the
     * Channel Services APIs,
     * [accounts.customers.create](https://cloud.google.com/channel/docs/reference/rest/v1/accounts.customers/create)
     * and
     * [accounts.customers.entitlements.create](https://cloud.google.com/channel/docs/reference/rest/v1/accounts.customers.entitlements/create).
     *
     * When creating a subaccount, the current authenticated user must have the
     * `billing.accounts.update` IAM permission on the parent account, which is
     * typically given to billing account
     * [administrators](https://cloud.google.com/billing/docs/how-to/billing-access).
     * This method will return an error if the parent account has not been
     * provisioned for subaccounts.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {google.cloud.billing.v1.BillingAccount} request.billingAccount
     *   Required. The billing account resource to create.
     *   Currently CreateBillingAccount only supports subaccount creation, so
     *   any created billing accounts must be under a provided parent billing
     *   account.
     * @param {string} [request.parent]
     *   Optional. The parent to create a billing account from.
     *   Format:
     *     - `billingAccounts/{billing_account_id}`, for example,
     *        `billingAccounts/012345-567890-ABCDEF`
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.billing.v1.BillingAccount|BillingAccount}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/cloud_billing.create_billing_account.js</caption>
     * region_tag:cloudbilling_v1_generated_CloudBilling_CreateBillingAccount_async
     */
    createBillingAccount(request?: protos.google.cloud.billing.v1.ICreateBillingAccountRequest, options?: CallOptions): Promise<[
        protos.google.cloud.billing.v1.IBillingAccount,
        protos.google.cloud.billing.v1.ICreateBillingAccountRequest | undefined,
        {} | undefined
    ]>;
    createBillingAccount(request: protos.google.cloud.billing.v1.ICreateBillingAccountRequest, options: CallOptions, callback: Callback<protos.google.cloud.billing.v1.IBillingAccount, protos.google.cloud.billing.v1.ICreateBillingAccountRequest | null | undefined, {} | null | undefined>): void;
    createBillingAccount(request: protos.google.cloud.billing.v1.ICreateBillingAccountRequest, callback: Callback<protos.google.cloud.billing.v1.IBillingAccount, protos.google.cloud.billing.v1.ICreateBillingAccountRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Gets the billing information for a project. The current authenticated user
     * must have the `resourcemanager.projects.get` permission for the project,
     * which can be granted by assigning the [Project
     * Viewer](https://cloud.google.com/iam/docs/understanding-roles#predefined_roles)
     * role.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The resource name of the project for which billing information is
     *   retrieved. For example, `projects/tokyo-rain-123`.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.billing.v1.ProjectBillingInfo|ProjectBillingInfo}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/cloud_billing.get_project_billing_info.js</caption>
     * region_tag:cloudbilling_v1_generated_CloudBilling_GetProjectBillingInfo_async
     */
    getProjectBillingInfo(request?: protos.google.cloud.billing.v1.IGetProjectBillingInfoRequest, options?: CallOptions): Promise<[
        protos.google.cloud.billing.v1.IProjectBillingInfo,
        protos.google.cloud.billing.v1.IGetProjectBillingInfoRequest | undefined,
        {} | undefined
    ]>;
    getProjectBillingInfo(request: protos.google.cloud.billing.v1.IGetProjectBillingInfoRequest, options: CallOptions, callback: Callback<protos.google.cloud.billing.v1.IProjectBillingInfo, protos.google.cloud.billing.v1.IGetProjectBillingInfoRequest | null | undefined, {} | null | undefined>): void;
    getProjectBillingInfo(request: protos.google.cloud.billing.v1.IGetProjectBillingInfoRequest, callback: Callback<protos.google.cloud.billing.v1.IProjectBillingInfo, protos.google.cloud.billing.v1.IGetProjectBillingInfoRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Sets or updates the billing account associated with a project. You specify
     * the new billing account by setting the `billing_account_name` in the
     * `ProjectBillingInfo` resource to the resource name of a billing account.
     * Associating a project with an open billing account enables billing on the
     * project and allows charges for resource usage. If the project already had a
     * billing account, this method changes the billing account used for resource
     * usage charges.
     *
     * *Note:* Incurred charges that have not yet been reported in the transaction
     * history of the Google Cloud Console might be billed to the new billing
     * account, even if the charge occurred before the new billing account was
     * assigned to the project.
     *
     * The current authenticated user must have ownership privileges for both
     * the
     * [project](https://cloud.google.com/docs/permissions-overview#h.bgs0oxofvnoo
     * ) and the [billing
     * account](https://cloud.google.com/billing/docs/how-to/billing-access).
     *
     * You can disable billing on the project by setting the
     * `billing_account_name` field to empty. This action disassociates the
     * current billing account from the project. Any billable activity of your
     * in-use services will stop, and your application could stop functioning as
     * expected. Any unbilled charges to date will be billed to the previously
     * associated account. The current authenticated user must be either an owner
     * of the project or an owner of the billing account for the project.
     *
     * Note that associating a project with a *closed* billing account will have
     * much the same effect as disabling billing on the project: any paid
     * resources used by the project will be shut down. Thus, unless you wish to
     * disable billing, you should always call this method with the name of an
     * *open* billing account.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The resource name of the project associated with the billing
     *   information that you want to update. For example,
     *   `projects/tokyo-rain-123`.
     * @param {google.cloud.billing.v1.ProjectBillingInfo} request.projectBillingInfo
     *   The new billing information for the project. Output-only fields are
     *   ignored; thus, you can leave empty all fields except
     *   `billing_account_name`.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.billing.v1.ProjectBillingInfo|ProjectBillingInfo}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/cloud_billing.update_project_billing_info.js</caption>
     * region_tag:cloudbilling_v1_generated_CloudBilling_UpdateProjectBillingInfo_async
     */
    updateProjectBillingInfo(request?: protos.google.cloud.billing.v1.IUpdateProjectBillingInfoRequest, options?: CallOptions): Promise<[
        protos.google.cloud.billing.v1.IProjectBillingInfo,
        (protos.google.cloud.billing.v1.IUpdateProjectBillingInfoRequest | undefined),
        {} | undefined
    ]>;
    updateProjectBillingInfo(request: protos.google.cloud.billing.v1.IUpdateProjectBillingInfoRequest, options: CallOptions, callback: Callback<protos.google.cloud.billing.v1.IProjectBillingInfo, protos.google.cloud.billing.v1.IUpdateProjectBillingInfoRequest | null | undefined, {} | null | undefined>): void;
    updateProjectBillingInfo(request: protos.google.cloud.billing.v1.IUpdateProjectBillingInfoRequest, callback: Callback<protos.google.cloud.billing.v1.IProjectBillingInfo, protos.google.cloud.billing.v1.IUpdateProjectBillingInfoRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Gets the access control policy for a billing account.
     * The caller must have the `billing.accounts.getIamPolicy` permission on the
     * account, which is often given to billing account
     * [viewers](https://cloud.google.com/billing/docs/how-to/billing-access).
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.resource
     *   REQUIRED: The resource for which the policy is being requested.
     *   See the operation documentation for the appropriate value for this field.
     * @param {google.iam.v1.GetPolicyOptions} request.options
     *   OPTIONAL: A `GetPolicyOptions` object for specifying options to
     *   `GetIamPolicy`.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.iam.v1.Policy|Policy}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/cloud_billing.get_iam_policy.js</caption>
     * region_tag:cloudbilling_v1_generated_CloudBilling_GetIamPolicy_async
     */
    getIamPolicy(request?: protos.google.iam.v1.IGetIamPolicyRequest, options?: CallOptions): Promise<[
        protos.google.iam.v1.IPolicy,
        protos.google.iam.v1.IGetIamPolicyRequest | undefined,
        {} | undefined
    ]>;
    getIamPolicy(request: protos.google.iam.v1.IGetIamPolicyRequest, options: CallOptions, callback: Callback<protos.google.iam.v1.IPolicy, protos.google.iam.v1.IGetIamPolicyRequest | null | undefined, {} | null | undefined>): void;
    getIamPolicy(request: protos.google.iam.v1.IGetIamPolicyRequest, callback: Callback<protos.google.iam.v1.IPolicy, protos.google.iam.v1.IGetIamPolicyRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Sets the access control policy for a billing account. Replaces any existing
     * policy.
     * The caller must have the `billing.accounts.setIamPolicy` permission on the
     * account, which is often given to billing account
     * [administrators](https://cloud.google.com/billing/docs/how-to/billing-access).
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.resource
     *   REQUIRED: The resource for which the policy is being specified.
     *   See the operation documentation for the appropriate value for this field.
     * @param {google.iam.v1.Policy} request.policy
     *   REQUIRED: The complete policy to be applied to the `resource`. The size of
     *   the policy is limited to a few 10s of KB. An empty policy is a
     *   valid policy but certain Cloud Platform services (such as Projects)
     *   might reject them.
     * @param {google.protobuf.FieldMask} request.updateMask
     *   OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only
     *   the fields in the mask will be modified. If no mask is provided, the
     *   following default mask is used:
     *
     *   `paths: "bindings, etag"`
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.iam.v1.Policy|Policy}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/cloud_billing.set_iam_policy.js</caption>
     * region_tag:cloudbilling_v1_generated_CloudBilling_SetIamPolicy_async
     */
    setIamPolicy(request?: protos.google.iam.v1.ISetIamPolicyRequest, options?: CallOptions): Promise<[
        protos.google.iam.v1.IPolicy,
        protos.google.iam.v1.ISetIamPolicyRequest | undefined,
        {} | undefined
    ]>;
    setIamPolicy(request: protos.google.iam.v1.ISetIamPolicyRequest, options: CallOptions, callback: Callback<protos.google.iam.v1.IPolicy, protos.google.iam.v1.ISetIamPolicyRequest | null | undefined, {} | null | undefined>): void;
    setIamPolicy(request: protos.google.iam.v1.ISetIamPolicyRequest, callback: Callback<protos.google.iam.v1.IPolicy, protos.google.iam.v1.ISetIamPolicyRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Tests the access control policy for a billing account. This method takes
     * the resource and a set of permissions as input and returns the subset of
     * the input permissions that the caller is allowed for that resource.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.resource
     *   REQUIRED: The resource for which the policy detail is being requested.
     *   See the operation documentation for the appropriate value for this field.
     * @param {string[]} request.permissions
     *   The set of permissions to check for the `resource`. Permissions with
     *   wildcards (such as '*' or 'storage.*') are not allowed. For more
     *   information see
     *   [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.iam.v1.TestIamPermissionsResponse|TestIamPermissionsResponse}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/cloud_billing.test_iam_permissions.js</caption>
     * region_tag:cloudbilling_v1_generated_CloudBilling_TestIamPermissions_async
     */
    testIamPermissions(request?: protos.google.iam.v1.ITestIamPermissionsRequest, options?: CallOptions): Promise<[
        protos.google.iam.v1.ITestIamPermissionsResponse,
        protos.google.iam.v1.ITestIamPermissionsRequest | undefined,
        {} | undefined
    ]>;
    testIamPermissions(request: protos.google.iam.v1.ITestIamPermissionsRequest, options: CallOptions, callback: Callback<protos.google.iam.v1.ITestIamPermissionsResponse, protos.google.iam.v1.ITestIamPermissionsRequest | null | undefined, {} | null | undefined>): void;
    testIamPermissions(request: protos.google.iam.v1.ITestIamPermissionsRequest, callback: Callback<protos.google.iam.v1.ITestIamPermissionsResponse, protos.google.iam.v1.ITestIamPermissionsRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Changes which parent organization a billing account belongs to.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The resource name of the billing account to move.
     *   Must be of the form `billingAccounts/{billing_account_id}`.
     *   The specified billing account cannot be a subaccount, since a subaccount
     *   always belongs to the same organization as its parent account.
     * @param {string} request.destinationParent
     *   Required. The resource name of the Organization to move
     *   the billing account under.
     *   Must be of the form `organizations/{organization_id}`.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.cloud.billing.v1.BillingAccount|BillingAccount}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/cloud_billing.move_billing_account.js</caption>
     * region_tag:cloudbilling_v1_generated_CloudBilling_MoveBillingAccount_async
     */
    moveBillingAccount(request?: protos.google.cloud.billing.v1.IMoveBillingAccountRequest, options?: CallOptions): Promise<[
        protos.google.cloud.billing.v1.IBillingAccount,
        protos.google.cloud.billing.v1.IMoveBillingAccountRequest | undefined,
        {} | undefined
    ]>;
    moveBillingAccount(request: protos.google.cloud.billing.v1.IMoveBillingAccountRequest, options: CallOptions, callback: Callback<protos.google.cloud.billing.v1.IBillingAccount, protos.google.cloud.billing.v1.IMoveBillingAccountRequest | null | undefined, {} | null | undefined>): void;
    moveBillingAccount(request: protos.google.cloud.billing.v1.IMoveBillingAccountRequest, callback: Callback<protos.google.cloud.billing.v1.IBillingAccount, protos.google.cloud.billing.v1.IMoveBillingAccountRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Lists the billing accounts that the current authenticated user has
     * permission to
     * [view](https://cloud.google.com/billing/docs/how-to/billing-access).
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {number} request.pageSize
     *   Requested page size. The maximum page size is 100; this is also the
     *   default.
     * @param {string} request.pageToken
     *   A token identifying a page of results to return. This should be a
     *   `next_page_token` value returned from a previous `ListBillingAccounts`
     *   call. If unspecified, the first page of results is returned.
     * @param {string} request.filter
     *   Options for how to filter the returned billing accounts.
     *   This only supports filtering for
     *   [subaccounts](https://cloud.google.com/billing/docs/concepts) under a
     *   single provided parent billing account.
     *   (for example,
     *   `master_billing_account=billingAccounts/012345-678901-ABCDEF`).
     *   Boolean algebra and other fields are not currently supported.
     * @param {string} [request.parent]
     *   Optional. The parent resource to list billing accounts from.
     *   Format:
     *     - `organizations/{organization_id}`, for example,
     *       `organizations/12345678`
     *     - `billingAccounts/{billing_account_id}`, for example,
     *       `billingAccounts/012345-567890-ABCDEF`
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of {@link protos.google.cloud.billing.v1.BillingAccount|BillingAccount}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `listBillingAccountsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listBillingAccounts(request?: protos.google.cloud.billing.v1.IListBillingAccountsRequest, options?: CallOptions): Promise<[
        protos.google.cloud.billing.v1.IBillingAccount[],
        protos.google.cloud.billing.v1.IListBillingAccountsRequest | null,
        protos.google.cloud.billing.v1.IListBillingAccountsResponse
    ]>;
    listBillingAccounts(request: protos.google.cloud.billing.v1.IListBillingAccountsRequest, options: CallOptions, callback: PaginationCallback<protos.google.cloud.billing.v1.IListBillingAccountsRequest, protos.google.cloud.billing.v1.IListBillingAccountsResponse | null | undefined, protos.google.cloud.billing.v1.IBillingAccount>): void;
    listBillingAccounts(request: protos.google.cloud.billing.v1.IListBillingAccountsRequest, callback: PaginationCallback<protos.google.cloud.billing.v1.IListBillingAccountsRequest, protos.google.cloud.billing.v1.IListBillingAccountsResponse | null | undefined, protos.google.cloud.billing.v1.IBillingAccount>): void;
    /**
     * Equivalent to `listBillingAccounts`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {number} request.pageSize
     *   Requested page size. The maximum page size is 100; this is also the
     *   default.
     * @param {string} request.pageToken
     *   A token identifying a page of results to return. This should be a
     *   `next_page_token` value returned from a previous `ListBillingAccounts`
     *   call. If unspecified, the first page of results is returned.
     * @param {string} request.filter
     *   Options for how to filter the returned billing accounts.
     *   This only supports filtering for
     *   [subaccounts](https://cloud.google.com/billing/docs/concepts) under a
     *   single provided parent billing account.
     *   (for example,
     *   `master_billing_account=billingAccounts/012345-678901-ABCDEF`).
     *   Boolean algebra and other fields are not currently supported.
     * @param {string} [request.parent]
     *   Optional. The parent resource to list billing accounts from.
     *   Format:
     *     - `organizations/{organization_id}`, for example,
     *       `organizations/12345678`
     *     - `billingAccounts/{billing_account_id}`, for example,
     *       `billingAccounts/012345-567890-ABCDEF`
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing {@link protos.google.cloud.billing.v1.BillingAccount|BillingAccount} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listBillingAccountsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listBillingAccountsStream(request?: protos.google.cloud.billing.v1.IListBillingAccountsRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listBillingAccounts`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {number} request.pageSize
     *   Requested page size. The maximum page size is 100; this is also the
     *   default.
     * @param {string} request.pageToken
     *   A token identifying a page of results to return. This should be a
     *   `next_page_token` value returned from a previous `ListBillingAccounts`
     *   call. If unspecified, the first page of results is returned.
     * @param {string} request.filter
     *   Options for how to filter the returned billing accounts.
     *   This only supports filtering for
     *   [subaccounts](https://cloud.google.com/billing/docs/concepts) under a
     *   single provided parent billing account.
     *   (for example,
     *   `master_billing_account=billingAccounts/012345-678901-ABCDEF`).
     *   Boolean algebra and other fields are not currently supported.
     * @param {string} [request.parent]
     *   Optional. The parent resource to list billing accounts from.
     *   Format:
     *     - `organizations/{organization_id}`, for example,
     *       `organizations/12345678`
     *     - `billingAccounts/{billing_account_id}`, for example,
     *       `billingAccounts/012345-567890-ABCDEF`
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link protos.google.cloud.billing.v1.BillingAccount|BillingAccount}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/cloud_billing.list_billing_accounts.js</caption>
     * region_tag:cloudbilling_v1_generated_CloudBilling_ListBillingAccounts_async
     */
    listBillingAccountsAsync(request?: protos.google.cloud.billing.v1.IListBillingAccountsRequest, options?: CallOptions): AsyncIterable<protos.google.cloud.billing.v1.IBillingAccount>;
    /**
     * Lists the projects associated with a billing account. The current
     * authenticated user must have the `billing.resourceAssociations.list` IAM
     * permission, which is often given to billing account
     * [viewers](https://cloud.google.com/billing/docs/how-to/billing-access).
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The resource name of the billing account associated with the
     *   projects that you want to list. For example,
     *   `billingAccounts/012345-567890-ABCDEF`.
     * @param {number} request.pageSize
     *   Requested page size. The maximum page size is 100; this is also the
     *   default.
     * @param {string} request.pageToken
     *   A token identifying a page of results to be returned. This should be a
     *   `next_page_token` value returned from a previous `ListProjectBillingInfo`
     *   call. If unspecified, the first page of results is returned.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of {@link protos.google.cloud.billing.v1.ProjectBillingInfo|ProjectBillingInfo}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `listProjectBillingInfoAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listProjectBillingInfo(request?: protos.google.cloud.billing.v1.IListProjectBillingInfoRequest, options?: CallOptions): Promise<[
        protos.google.cloud.billing.v1.IProjectBillingInfo[],
        protos.google.cloud.billing.v1.IListProjectBillingInfoRequest | null,
        protos.google.cloud.billing.v1.IListProjectBillingInfoResponse
    ]>;
    listProjectBillingInfo(request: protos.google.cloud.billing.v1.IListProjectBillingInfoRequest, options: CallOptions, callback: PaginationCallback<protos.google.cloud.billing.v1.IListProjectBillingInfoRequest, protos.google.cloud.billing.v1.IListProjectBillingInfoResponse | null | undefined, protos.google.cloud.billing.v1.IProjectBillingInfo>): void;
    listProjectBillingInfo(request: protos.google.cloud.billing.v1.IListProjectBillingInfoRequest, callback: PaginationCallback<protos.google.cloud.billing.v1.IListProjectBillingInfoRequest, protos.google.cloud.billing.v1.IListProjectBillingInfoResponse | null | undefined, protos.google.cloud.billing.v1.IProjectBillingInfo>): void;
    /**
     * Equivalent to `listProjectBillingInfo`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The resource name of the billing account associated with the
     *   projects that you want to list. For example,
     *   `billingAccounts/012345-567890-ABCDEF`.
     * @param {number} request.pageSize
     *   Requested page size. The maximum page size is 100; this is also the
     *   default.
     * @param {string} request.pageToken
     *   A token identifying a page of results to be returned. This should be a
     *   `next_page_token` value returned from a previous `ListProjectBillingInfo`
     *   call. If unspecified, the first page of results is returned.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing {@link protos.google.cloud.billing.v1.ProjectBillingInfo|ProjectBillingInfo} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listProjectBillingInfoAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listProjectBillingInfoStream(request?: protos.google.cloud.billing.v1.IListProjectBillingInfoRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listProjectBillingInfo`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. The resource name of the billing account associated with the
     *   projects that you want to list. For example,
     *   `billingAccounts/012345-567890-ABCDEF`.
     * @param {number} request.pageSize
     *   Requested page size. The maximum page size is 100; this is also the
     *   default.
     * @param {string} request.pageToken
     *   A token identifying a page of results to be returned. This should be a
     *   `next_page_token` value returned from a previous `ListProjectBillingInfo`
     *   call. If unspecified, the first page of results is returned.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link protos.google.cloud.billing.v1.ProjectBillingInfo|ProjectBillingInfo}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v1/cloud_billing.list_project_billing_info.js</caption>
     * region_tag:cloudbilling_v1_generated_CloudBilling_ListProjectBillingInfo_async
     */
    listProjectBillingInfoAsync(request?: protos.google.cloud.billing.v1.IListProjectBillingInfoRequest, options?: CallOptions): AsyncIterable<protos.google.cloud.billing.v1.IProjectBillingInfo>;
    /**
     * Return a fully-qualified billingAccount resource name string.
     *
     * @param {string} billing_account
     * @returns {string} Resource name string.
     */
    billingAccountPath(billingAccount: string): string;
    /**
     * Parse the billing_account from BillingAccount resource.
     *
     * @param {string} billingAccountName
     *   A fully-qualified path representing billing_account resource.
     * @returns {string} A string representing the billing_account.
     */
    matchBillingAccountFromBillingAccountName(billingAccountName: string): string | number;
    /**
     * Return a fully-qualified organization resource name string.
     *
     * @param {string} organization
     * @returns {string} Resource name string.
     */
    organizationPath(organization: string): string;
    /**
     * Parse the organization from Organization resource.
     *
     * @param {string} organizationName
     *   A fully-qualified path representing Organization resource.
     * @returns {string} A string representing the organization.
     */
    matchOrganizationFromOrganizationName(organizationName: string): string | number;
    /**
     * Return a fully-qualified organizationBillingAccount resource name string.
     *
     * @param {string} organization
     * @param {string} billing_account
     * @returns {string} Resource name string.
     */
    organizationBillingAccountPath(organization: string, billingAccount: string): string;
    /**
     * Parse the organization from OrganizationBillingAccount resource.
     *
     * @param {string} organizationBillingAccountName
     *   A fully-qualified path representing organization_billing_account resource.
     * @returns {string} A string representing the organization.
     */
    matchOrganizationFromOrganizationBillingAccountName(organizationBillingAccountName: string): string | number;
    /**
     * Parse the billing_account from OrganizationBillingAccount resource.
     *
     * @param {string} organizationBillingAccountName
     *   A fully-qualified path representing organization_billing_account resource.
     * @returns {string} A string representing the billing_account.
     */
    matchBillingAccountFromOrganizationBillingAccountName(organizationBillingAccountName: string): string | number;
    /**
     * Return a fully-qualified project resource name string.
     *
     * @param {string} project
     * @returns {string} Resource name string.
     */
    projectPath(project: string): string;
    /**
     * Parse the project from Project resource.
     *
     * @param {string} projectName
     *   A fully-qualified path representing Project resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectName(projectName: string): string | number;
    /**
     * Return a fully-qualified projectBillingInfo resource name string.
     *
     * @param {string} project
     * @returns {string} Resource name string.
     */
    projectBillingInfoPath(project: string): string;
    /**
     * Parse the project from ProjectBillingInfo resource.
     *
     * @param {string} projectBillingInfoName
     *   A fully-qualified path representing ProjectBillingInfo resource.
     * @returns {string} A string representing the project.
     */
    matchProjectFromProjectBillingInfoName(projectBillingInfoName: string): string | number;
    /**
     * Return a fully-qualified service resource name string.
     *
     * @param {string} service
     * @returns {string} Resource name string.
     */
    servicePath(service: string): string;
    /**
     * Parse the service from Service resource.
     *
     * @param {string} serviceName
     *   A fully-qualified path representing Service resource.
     * @returns {string} A string representing the service.
     */
    matchServiceFromServiceName(serviceName: string): string | number;
    /**
     * Return a fully-qualified sku resource name string.
     *
     * @param {string} service
     * @param {string} sku
     * @returns {string} Resource name string.
     */
    skuPath(service: string, sku: string): string;
    /**
     * Parse the service from Sku resource.
     *
     * @param {string} skuName
     *   A fully-qualified path representing Sku resource.
     * @returns {string} A string representing the service.
     */
    matchServiceFromSkuName(skuName: string): string | number;
    /**
     * Parse the sku from Sku resource.
     *
     * @param {string} skuName
     *   A fully-qualified path representing Sku resource.
     * @returns {string} A string representing the sku.
     */
    matchSkuFromSkuName(skuName: string): string | number;
    /**
     * Terminate the gRPC channel and close the client.
     *
     * The client will no longer be usable and all future behavior is undefined.
     * @returns {Promise} A promise that resolves when the client is closed.
     */
    close(): Promise<void>;
}
